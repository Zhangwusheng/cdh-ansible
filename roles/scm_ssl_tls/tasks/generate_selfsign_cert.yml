---
- name: Get JAVA Home
  command: "find /usr/java/ -name '*cloudera'"
  register: java_home
  ignore_errors: True
  changed_when: False

- name: Generate Keypair for Cloudera Manager server
  command: "{{java_home.stdout}}/bin/keytool -genkeypair -alias cmhost -keyalg RSA -keysize 2048 -dname 'cn={{cn}}, 
          ou={{ou}},o={{o}}, l={{l}}, st={{st}}, c={{c}}' -keypass {{keypass}} 
          -keystore {{cdh_encryption_key_location}}/jks/keystore.jks -storepass {{storepass}} -validity 360"



- name: Copy Java default truststore
  copy: 
    remote_src: True 
    src: "{{java_home.stdout}}/jre/lib/security/cacerts" 
    dest: "{{cdh_encryption_key_location}}/x509/truststore.jks"
    owner: cloudera-scm
    group: cloudera-scm
  when: truststore_results.stat.exists == False

- name: Change default truststore password
  command: "keytool -storepasswd -new {{ storepass }} -keystore {{cdh_encryption_key_location}}/x509/truststore.jks
          -storepass changeit"
  when: truststore_results.stat.exists == False

- name: Check if keystore is exported to truststore
  shell: "keytool -list -v -keystore {{cdh_encryption_key_location}}/x509/truststore.jks -storepass {{ storepass }} | grep {{hostvars[inventory_hostname]['ansible_fqdn'] }}"
  ignore_errors: True
  register: keystore_export
  changed_when: False

- debug: msg="{{keystore_export.stdout}}"
  when: keystore_export.stdout == ""

- name: Export the certificate
  shell: "keytool -export -alias {{hostvars[inventory_hostname]['ansible_fqdn'] }} -keystore {{cdh_encryption_key_location}}/jks/keystore.jks
         -rfc -file /tmp/selfsigned.cer -storepass {{ storepass }}"
  when: keystore_export.stdout == ""

- name: example copying file with owner and permissions
  copy:
    remote_src: True
    src: /tmp/selfsigned.cer
    dest: "{{cdh_encryption_key_location}}/x509/cm.pem"
    owner: cloudera-scm
    group: cloudera-scm
  when: keystore_export.stdout == ""

- name: Import the certificate
  shell: "keytool -import -alias {{hostvars[inventory_hostname]['ansible_fqdn'] }} -file /tmp/selfsigned.cer -keystore {{cdh_encryption_key_location}}/x509/truststore.jks -storepass {{ storepass }} -noprompt"
  ignore_errors: True
  when: keystore_export.stdout == ""

# - name: Certificate Clean up
#   file: path=/tmp/selfsigned.cer state=absent
#   when: keystore_export.stdout == ""

